@startuml Diagramme de Classes MVC - Application Flask Multi-Magasins

' ===== COUCHE MODÈLE (Models) =====
package "Models" {
    class FlaskApp {
        +db: SQLAlchemy
        +config: Config
        --
        +create_app(): Flask
        +register_blueprints(): void
    }
    
    class "models.py" as models {
        +Magasin: Model
        +Caisse: Model
        +Produit: Model
        +Categorie: Model
        +StockMagasin: Model
        +StockCentral: Model
        +Vente: Model
        +LigneVente: Model
        +DemandeReapprovisionnement: Model
        --
        +db.session.query(): Query
        +db.session.add(): void
        +db.session.commit(): void
    }
}

' ===== COUCHE CONTRÔLEUR (Controllers) =====
package "Controllers" {
    class "home_controller.py" as home_ctrl {
        +bp: Blueprint
        --
        +index(): Response
    }
    
    class "magasin_controller.py" as magasin_ctrl {
        +bp: Blueprint
        --
        +index(): Response
        +detail(magasin_id): Response
        +caisses(magasin_id): Response
    }
    
    class "produit_controller.py" as produit_ctrl {
        +bp: Blueprint
        --
        +liste(magasin_id): Response
        +ajouter(): Response
        +modifier(id): Response
    }
    
    class "vente_controller.py" as vente_ctrl {
        +bp: Blueprint
        --
        +index(caisse_id): Response
        +rechercher_produits(caisse_id): Response
        +finaliser_vente(caisse_id): Response
        +retours(caisse_id): Response
        +annuler(vente_id): Response
    }
    
    class "rapport_controller.py" as rapport_ctrl {
        +bp: Blueprint
        --
        +index(magasin_id): Response
    }
    
    class "stock_central_controller.py" as stock_ctrl {
        +bp: Blueprint
        --
        +index(): Response
        +demander_reappro(): Response
        +valider_demande(demande_id): Response
    }
    
    class "caisse_controller.py" as caisse_ctrl {
        +bp: Blueprint
        --
        +options(caisse_id): Response
    }
}

' ===== COUCHE VUE (Views) =====
package "Templates" {
    class "home.html" as home_template {
        --
        +render_dashboard(): HTML
    }
    
    class "magasin/" as magasin_views {
        +index.html: Template
        --
        +render_magasin_list(): HTML
    }
    
    class "produit/" as produit_views {
        +liste.html: Template
        +ajouter.html: Template
        +modifier.html: Template
        --
        +render_produit_management(): HTML
    }
    
    class "vente/" as vente_views {
        +index.html: Template
        +nouvelle.html: Template
        +retour.html: Template
        --
        +render_pos_interface(): HTML
    }
    
    class "rapport/" as rapport_views {
        +index.html: Template
        --
        +render_analytics(): HTML
    }
    
    class "stock_central/" as stock_views {
        +index.html: Template
        --
        +render_stock_management(): HTML
    }
    
    class "caisse/" as caisse_views {
        +index.html: Template
        +options.html: Template
        --
        +render_caisse_interface(): HTML
    }
}

' ===== RELATIONS MVC =====
' Models utilisés par Controllers
models <-- home_ctrl : utilise
models <-- magasin_ctrl : utilise
models <-- produit_ctrl : utilise
models <-- vente_ctrl : utilise
models <-- rapport_ctrl : utilise
models <-- stock_ctrl : utilise
models <-- caisse_ctrl : utilise

' Controllers vers Views
home_ctrl --> home_template : rend
magasin_ctrl --> magasin_views : rend
produit_ctrl --> produit_views : rend
vente_ctrl --> vente_views : rend
rapport_ctrl --> rapport_views : rend
stock_ctrl --> stock_views : rend
caisse_ctrl --> caisse_views : rend

' Configuration Flask
FlaskApp --> home_ctrl : configure
FlaskApp --> magasin_ctrl : configure
FlaskApp --> produit_ctrl : configure
FlaskApp --> vente_ctrl : configure
FlaskApp --> rapport_ctrl : configure
FlaskApp --> stock_ctrl : configure
FlaskApp --> caisse_ctrl : configure

title Architecture MVC Implémentée - Application Flask Multi-Magasins

legend right
  <b>Architecture Réelle Implémentée</b>
  
  <b>Models:</b>
  • models.py (9 entités SQLAlchemy)
  • FlaskApp configuration
  
  <b>Controllers:</b>
  • 7 fichiers *_controller.py
  • Blueprints Flask organisés
  
  <b>Views:</b>
  • Templates organisés par dossier
  • Interface responsive Jinja2
  
  <b>Navigation:</b>
  Magasins → Caisses → Ventes
  Produits → Stocks → Rapports
endlegend

@enduml 