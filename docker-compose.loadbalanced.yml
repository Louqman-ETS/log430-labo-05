version: '3.8'

services:
  # Instance 1 du service inventory-api
  inventory-api-1:
    build: ./services/inventory-api
    container_name: inventory-api-1
    environment:
      - DATABASE_URL=postgresql://postgres:password@inventory-db-lb:5432/inventory_db
      - REDIS_URL=redis://redis-lb:6379
      - INSTANCE_ID=inventory-api-1
      - PORT=8001
    ports:
      - "8011:8001"
    depends_on:
      inventory-db-lb:
        condition: service_healthy
      redis-lb:
        condition: service_healthy
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  # Instance 2 du service inventory-api
  inventory-api-2:
    build: ./services/inventory-api
    container_name: inventory-api-2
    environment:
      - DATABASE_URL=postgresql://postgres:password@inventory-db-lb:5432/inventory_db
      - REDIS_URL=redis://redis-lb:6379
      - INSTANCE_ID=inventory-api-2
      - PORT=8001
    ports:
      - "8012:8001"
    depends_on:
      inventory-db-lb:
        condition: service_healthy
      redis-lb:
        condition: service_healthy
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  # Instance 3 du service inventory-api
  inventory-api-3:
    build: ./services/inventory-api
    container_name: inventory-api-3
    environment:
      - DATABASE_URL=postgresql://postgres:password@inventory-db-lb:5432/inventory_db
      - REDIS_URL=redis://redis-lb:6379
      - INSTANCE_ID=inventory-api-3
      - PORT=8001
    ports:
      - "8013:8001"
    depends_on:
      inventory-db-lb:
        condition: service_healthy
      redis-lb:
        condition: service_healthy
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  # Base de données partagée
  inventory-db-lb:
    image: postgres:15
    container_name: inventory-db-lb
    environment:
      POSTGRES_DB: inventory_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5443:5432"
    networks:
      - microservices-network
    volumes:
      - inventory_db_lb_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis partagé
  redis-lb:
    image: redis:7-alpine
    container_name: redis-lb
    ports:
      - "6389:6379"
    networks:
      - microservices-network
    volumes:
      - redis_lb_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

networks:
  microservices-network:
    external: true

volumes:
  inventory_db_lb_data:
  redis_lb_data: 