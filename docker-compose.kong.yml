version: '3.8'

services:
  # Base de données pour Kong
  kong-database:
    image: postgres:15
    container_name: kong-database
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kongpass
    volumes:
      - kong_data:/var/lib/postgresql/data
    ports:
      - "5436:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kong"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - kong-network

  # Migration Kong
  kong-migrations:
    image: kong/kong-gateway:3.4.1.1
    container_name: kong-migrations
    command: kong migrations bootstrap
    depends_on:
      - kong-database
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_PORT: 5432
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpass
      KONG_PG_DATABASE: kong
    networks:
      - kong-network

  # Kong Gateway
  kong:
    image: kong/kong-gateway:3.4.1.1
    container_name: kong-gateway
    user: "kong"
    depends_on:
      - kong-database
      - kong-migrations
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_PORT: 5432
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpass
      KONG_PG_DATABASE: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
      KONG_ADMIN_GUI_LISTEN: "0.0.0.0:8002"
      KONG_PROXY_LISTEN: "0.0.0.0:8000"
      KONG_LOG_LEVEL: info
      KONG_PLUGINS: bundled,key-auth,rate-limiting,request-transformer,response-transformer
    ports:
      - "9000:8000"   # Proxy - changé pour éviter conflit avec ecommerce
      - "9443:8443"   # Proxy SSL
      - "9001:8001"   # Admin API - changé pour éviter conflit avec inventory
      - "9444:8444"   # Admin API SSL
      - "9002:8002"   # Manager GUI - changé pour éviter conflit avec retail
      - "9445:8445"   # Manager GUI SSL
    volumes:
      - kong_prefix_vol:/var/lib/kong
      - kong_tmp_vol:/tmp
      - ./logs:/var/log/kong
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - kong-network
      - microservices-network

  # Konga - Interface web pour Kong
  konga:
    image: pantsel/konga:latest
    container_name: konga
    depends_on:
      - kong
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_PORT: 5432
      DB_USER: kong
      DB_PASSWORD: kongpass
      DB_DATABASE: konga_db
      KONGA_HOOK_TIMEOUT: 120000
    ports:
      - "1337:1337"
    volumes:
      - konga_data:/app/kongadata
    networks:
      - kong-network

volumes:
  kong_data:
  kong_prefix_vol:
  kong_tmp_vol:
  konga_data:

networks:
  kong-network:
    driver: bridge
  microservices-network:
    external: true 